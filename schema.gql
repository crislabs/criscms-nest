# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type PageData {
  count: Float!
  limit: Float!
  offset: Float!
}

type DataSite {
  name: String!
  description: String
  type: Type!
  images: ImageSite
  info: InfoSite
  admin: [AdminSite]
  db: [DBSite]
  updateDate: UpdateDate!
}

type DBSite {
  label: String!
  slug: String!
}

type ImageSite {
  banner: Image
  logo: Image
  icon: Image
}

type Image {
  uid: String
  src: String
  alt: String
}

type AdminSite {
  privilege: String!
  sid: String!
}

type InfoSite {
  clientId: String!
}

type UpdateDate {
  createdAt: DateTime!
  lastUpdatedAt: DateTime
  register: [Register!]
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Register {
  uid: String
  change: String
  updatedAt: DateTime!
}

type Tags {
  uid: String!
  text: String!
  slug: String!
}

type Type {
  label: String
  slug: String
}

type FoodSite {
  _id: ID!
  data: DataSite!
  url: String
}

type HardwareStoreSite {
  _id: ID!
  data: DataSite!
  url: String
}

type PetSite {
  _id: ID!
  data: DataSite!
  url: String
  pages: [PetPage0]
  users: [PetUser]
  products: [PetProduct]
  adoptions: [PetAdoption]
  articles: [PetArticle]
  team: [PetTeam]
}

type ListPetSite {
  page: PetSiteConnection!
  pageData: PageData
}

type PetSiteConnection {
  edges: [PetSiteEdge!]
  pageInfo: PetSitePageInfo
}

type PetSiteEdge {
  cursor: String
  node: PetSite
}

type PetSitePageInfo {
  startCursor: String
  endCursor: String
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
}

type PortfolioSite {
  _id: ID!
  data: DataSite!
  url: String
  pages: [PortfolioPage0]
  users: [PortfolioUser]
  products: [PortfolioProduct]
  articles: [PortfolioArticle]
  team: [PortfolioTeam]
}

type ListPortfolioSite {
  page: PortfolioSiteConnection!
  pageData: PageData
}

type PortfolioSiteConnection {
  edges: [PortfolioSiteEdge!]
  pageInfo: PortfolioSitePageInfo
}

type PortfolioSiteEdge {
  cursor: String
  node: PortfolioSite
}

type PortfolioSitePageInfo {
  startCursor: String
  endCursor: String
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
}

type DataComment {
  content: String!
  siteId: String!
  author: String!
  updateDate: UpdateDate!
  likes: [String!]
}

type FoodComment {
  _id: ID!
  data: DataComment!
  parentId: String!
}

type PetComment {
  _id: ID!
  data: DataComment!
  parentId: String!
}

type PortfolioComment {
  _id: ID!
  data: DataComment!
  parentId: String!
}

type HardwareStoreComment {
  _id: ID!
  data: DataComment!
  parentId: String!
}

type DataProduct {
  name: String!
  description: String!
  thumbnailUrl: String
  type: Type!
  mark: Mark
  inStock: Float
  price: Float
  discountPrice: Float
  promotion: Promotion
  details: String
  featured: String
  specs: String
  tags: [Tags!]
  images: [Image!]
  updateDate: UpdateDate!
  likes: [String!]
  siteId: String!
}

type Mark {
  label: String
  slug: String
}

type Promotion {
  label: String
  slug: String
}

type HardwareStoreProduct {
  _id: ID!
  data: DataProduct!
  slug: String!
  parentId: String!
}

type PetProduct {
  _id: ID!
  data: DataProduct!
  slug: String!
  parentId: String!
  comments: [PetComment]
}

type PortfolioProduct {
  _id: ID!
  data: DataProduct!
  slug: String!
  parentId: String!
  comments: [PortfolioComment]
}

type FoodProduct {
  _id: ID!
  data: DataProduct!
  slug: String!
  parentId: String!
}

type ListPetProduct {
  page: PetProductConnection!
  pageData: PageData
}

type PetProductConnection {
  edges: [PetProductEdge!]
  pageInfo: PetProductPageInfo
}

type PetProductEdge {
  cursor: String
  node: PetProduct
}

type PetProductPageInfo {
  startCursor: String
  endCursor: String
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
}

type ListPortfolioProduct {
  page: PortfolioProductConnection!
  pageData: PageData
}

type PortfolioProductConnection {
  edges: [PortfolioProductEdge!]
  pageInfo: PortfolioProductPageInfo
}

type PortfolioProductEdge {
  cursor: String
  node: PortfolioProduct
}

type PortfolioProductPageInfo {
  startCursor: String
  endCursor: String
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
}

type DataAdoption {
  name: String!
  description: String!
  thumbnailUrl: String
  type: Type!
  inStock: Float
  price: Float
  discountPrice: Float
  promotion: Promotion
  details: String
  featured: String
  specs: String
  tags: [Tags!]
  images: [Image!]
  updateDate: UpdateDate!
  likes: [String!]
  siteId: String!
}

type PetAdoption {
  _id: ID!
  data: DataAdoption!
  slug: String!
  parentId: String!
  comments: [PetComment]
}

type ListPetAdoption {
  page: PetAdoptionConnection!
  pageData: PageData
}

type PetAdoptionConnection {
  edges: [PetAdoptionEdge!]
  pageInfo: PetAdoptionPageInfo
}

type PetAdoptionEdge {
  cursor: String
  node: PetAdoption
}

type PetAdoptionPageInfo {
  startCursor: String
  endCursor: String
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
}

type DataArticle {
  name: String!
  description: String!
  thumbnailUrl: String
  content: String
  siteId: String
  category: String!
  meta: String
  tags: [Tags!]
  author: String!
  updateDate: UpdateDate!
  likes: [String!]
}

type PetArticle {
  _id: ID!
  data: DataArticle!
  parentId: String!
  slug: String!
  comments: [PetComment]
}

type ListPetArticle {
  page: PetArticleConnection!
  pageData: PageData
}

type PetArticleConnection {
  edges: [PetArticleEdge!]
  pageInfo: PetArticlePageInfo
}

type PetArticleEdge {
  cursor: String
  node: PetArticle
}

type PetArticlePageInfo {
  startCursor: String
  endCursor: String
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
}

type FoodArticle {
  _id: ID!
  data: DataArticle!
  parentId: String!
  slug: String!
}

type PortfolioArticle {
  _id: ID!
  data: DataArticle!
  parentId: String!
  slug: String!
  comments: [PortfolioComment]
}

type ListPortfolioArticle {
  page: PortfolioArticleConnection!
  pageData: PageData
}

type PortfolioArticleConnection {
  edges: [PortfolioArticleEdge!]
  pageInfo: PortfolioArticlePageInfo
}

type PortfolioArticleEdge {
  cursor: String
  node: PortfolioArticle
}

type PortfolioArticlePageInfo {
  startCursor: String
  endCursor: String
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
}

type HardwareStoreArticle {
  _id: ID!
  data: DataArticle!
  parentId: String!
  slug: String!
}

type DataPage {
  name: String!
  description: String!
  thumbnailUrl: String
  type: Type!
  icon: String
  section: [ComponentPage!]!
  updateDate: UpdateDate!
  siteId: String!
}

type ComponentPage {
  uid: String!
  component: String!
  html: String!
}

type FoodPage0 {
  _id: ID!
  data: DataPage!
  slug: String!
  parentId: String!
}

type FoodPage1 {
  _id: ID!
  data: DataPage!
  slug: String!
  parentId: String!
}

type FoodPage2 {
  _id: ID!
  data: DataPage!
  slug: String!
  parentId: String!
}

type FoodPage3 {
  _id: ID!
  data: DataPage!
  slug: String!
  parentId: String!
}

type FoodPage4 {
  _id: ID!
  data: DataPage!
  slug: String!
  parentId: String!
}

type FoodPage5 {
  _id: ID!
  data: DataPage!
  slug: String!
  parentId: String!
}

type FoodPage6 {
  _id: ID!
  data: DataPage!
  slug: String!
  parentId: String!
}

type FoodPage7 {
  _id: ID!
  data: DataPage!
  slug: String!
  parentId: String!
}

type FoodPage8 {
  _id: ID!
  data: DataPage!
  slug: String!
  parentId: String!
}

type FoodPage9 {
  _id: ID!
  data: DataPage!
  slug: String!
  parentId: String!
}

type FoodPage10 {
  _id: ID!
  data: DataPage!
  slug: String!
  parentId: String!
}

type FoodPage11 {
  _id: ID!
  data: DataPage!
  slug: String!
  parentId: String!
}

type FoodPage12 {
  _id: ID!
  data: DataPage!
  slug: String!
  parentId: String!
}

type HardwareStorePage0 {
  _id: ID!
  data: DataPage!
  slug: String!
  parentId: String!
}

type HardwareStorePage1 {
  _id: ID!
  data: DataPage!
  slug: String!
  parentId: String!
}

type HardwareStorePage2 {
  _id: ID!
  data: DataPage!
  slug: String!
  parentId: String!
}

type HardwareStorePage3 {
  _id: ID!
  data: DataPage!
  slug: String!
  parentId: String!
}

type HardwareStorePage4 {
  _id: ID!
  data: DataPage!
  slug: String!
  parentId: String!
}

type HardwareStorePage5 {
  _id: ID!
  data: DataPage!
  slug: String!
  parentId: String!
}

type HardwareStorePage6 {
  _id: ID!
  data: DataPage!
  slug: String!
  parentId: String!
}

type HardwareStorePage7 {
  _id: ID!
  data: DataPage!
  slug: String!
  parentId: String!
}

type HardwareStorePage8 {
  _id: ID!
  data: DataPage!
  slug: String!
  parentId: String!
}

type HardwareStorePage9 {
  _id: ID!
  data: DataPage!
  slug: String!
  parentId: String!
}

type HardwareStorePage10 {
  _id: ID!
  data: DataPage!
  slug: String!
  parentId: String!
}

type HardwareStorePage11 {
  _id: ID!
  data: DataPage!
  slug: String!
  parentId: String!
}

type HardwareStorePage12 {
  _id: ID!
  data: DataPage!
  slug: String!
  parentId: String!
}

type PetPage0 {
  _id: ID!
  data: DataPage!
  slug: String!
  parentId: String!
  adoptions: [PetAdoption]
  pages: [PetPage1]
  products: [PetProduct]
  articles: [PetArticle]
}

type PetPage1 {
  _id: ID!
  data: DataPage!
  slug: String!
  parentId: String!
  products: [PetProduct]
  pages: [PetPage2]
}

type PetPage2 {
  _id: ID!
  data: DataPage!
  slug: String!
  parentId: String!
  products: [PetProduct]
  pages: [PetPage3]
}

type PetPage3 {
  _id: ID!
  data: DataPage!
  slug: String!
  parentId: String!
  products: [PetProduct]
  pages: [PetPage4]
}

type PetPage4 {
  _id: ID!
  data: DataPage!
  slug: String!
  parentId: String!
  products: [PetProduct]
  pages: [PetPage5]
}

type PetPage5 {
  _id: ID!
  data: DataPage!
  slug: String!
  parentId: String!
  products: [PetProduct]
  pages: [PetPage6]
}

type PetPage6 {
  _id: ID!
  data: DataPage!
  slug: String!
  parentId: String!
  products: [PetProduct]
  pages: [PetPage7]
}

type PetPage7 {
  _id: ID!
  data: DataPage!
  slug: String!
  parentId: String!
  products: [PetProduct]
  pages: [PetPage8]
}

type PetPage8 {
  _id: ID!
  data: DataPage!
  slug: String!
  parentId: String!
  products: [PetProduct]
  pages: [PetPage9]
}

type PetPage9 {
  _id: ID!
  data: DataPage!
  slug: String!
  parentId: String!
  products: [PetProduct]
  pages: [PetPage10]
}

type PetPage10 {
  _id: ID!
  data: DataPage!
  slug: String!
  parentId: String!
  products: [PetProduct]
  pages: [PetPage11]
}

type PetPage11 {
  _id: ID!
  data: DataPage!
  slug: String!
  parentId: String!
  products: [PetProduct]
  pages: [PetPage12]
}

type PetPage12 {
  _id: ID!
  data: DataPage!
  slug: String!
  parentId: String!
  products: [PetProduct]
}

type PortfolioPage0 {
  _id: ID!
  data: DataPage!
  slug: String!
  parentId: String!
  pages: [PortfolioPage1]
  products: [PortfolioProduct]
  articles: [PortfolioArticle]
}

type PortfolioPage1 {
  _id: ID!
  data: DataPage!
  slug: String!
  parentId: String!
  products: [PortfolioProduct]
  pages: [PortfolioPage2]
}

type PortfolioPage2 {
  _id: ID!
  data: DataPage!
  slug: String!
  parentId: String!
  products: [PortfolioProduct]
  pages: [PortfolioPage3]
}

type PortfolioPage3 {
  _id: ID!
  data: DataPage!
  slug: String!
  parentId: String!
  products: [PortfolioProduct]
  pages: [PortfolioPage4]
}

type PortfolioPage4 {
  _id: ID!
  data: DataPage!
  slug: String!
  parentId: String!
  products: [PortfolioProduct]
  pages: [PortfolioPage5]
}

type PortfolioPage5 {
  _id: ID!
  data: DataPage!
  slug: String!
  parentId: String!
  products: [PortfolioProduct]
  pages: [PortfolioPage6]
}

type PortfolioPage6 {
  _id: ID!
  data: DataPage!
  slug: String!
  parentId: String!
  products: [PortfolioProduct]
  pages: [PortfolioPage7]
}

type PortfolioPage7 {
  _id: ID!
  data: DataPage!
  slug: String!
  parentId: String!
  products: [PortfolioProduct]
  pages: [PortfolioPage8]
}

type PortfolioPage8 {
  _id: ID!
  data: DataPage!
  slug: String!
  parentId: String!
  products: [PortfolioProduct]
  pages: [PortfolioPage9]
}

type PortfolioPage9 {
  _id: ID!
  data: DataPage!
  slug: String!
  parentId: String!
  products: [PortfolioProduct]
  pages: [PortfolioPage10]
}

type PortfolioPage10 {
  _id: ID!
  data: DataPage!
  slug: String!
  parentId: String!
  products: [PortfolioProduct]
  pages: [PortfolioPage11]
}

type PortfolioPage11 {
  _id: ID!
  data: DataPage!
  slug: String!
  parentId: String!
  products: [PortfolioProduct]
  pages: [PortfolioPage12]
}

type PortfolioPage12 {
  _id: ID!
  data: DataPage!
  slug: String!
  parentId: String!
  products: [PortfolioProduct]
}

type ListPetPage0 {
  page: PetPage0Connection!
  pageData: PageData
}

type PetPage0Connection {
  edges: [PetPage0Edge!]
  pageInfo: PetPage0PageInfo
}

type PetPage0Edge {
  cursor: String
  node: PetPage0
}

type PetPage0PageInfo {
  startCursor: String
  endCursor: String
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
}

type ListPetPage1 {
  page: PetPage1Connection!
  pageData: PageData
}

type PetPage1Connection {
  edges: [PetPage1Edge!]
  pageInfo: PetPage1PageInfo
}

type PetPage1Edge {
  cursor: String
  node: PetPage1
}

type PetPage1PageInfo {
  startCursor: String
  endCursor: String
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
}

type ListPetPage2 {
  page: PetPage2Connection!
  pageData: PageData
}

type PetPage2Connection {
  edges: [PetPage2Edge!]
  pageInfo: PetPage2PageInfo
}

type PetPage2Edge {
  cursor: String
  node: PetPage2
}

type PetPage2PageInfo {
  startCursor: String
  endCursor: String
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
}

type ListPetPage3 {
  page: PetPage3Connection!
  pageData: PageData
}

type PetPage3Connection {
  edges: [PetPage3Edge!]
  pageInfo: PetPage3PageInfo
}

type PetPage3Edge {
  cursor: String
  node: PetPage3
}

type PetPage3PageInfo {
  startCursor: String
  endCursor: String
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
}

type ListPetPage4 {
  page: PetPage4Connection!
  pageData: PageData
}

type PetPage4Connection {
  edges: [PetPage4Edge!]
  pageInfo: PetPage4PageInfo
}

type PetPage4Edge {
  cursor: String
  node: PetPage4
}

type PetPage4PageInfo {
  startCursor: String
  endCursor: String
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
}

type ListPetPage5 {
  page: PetPage5Connection!
  pageData: PageData
}

type PetPage5Connection {
  edges: [PetPage5Edge!]
  pageInfo: PetPage5PageInfo
}

type PetPage5Edge {
  cursor: String
  node: PetPage5
}

type PetPage5PageInfo {
  startCursor: String
  endCursor: String
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
}

type ListPetPage6 {
  page: PetPage6Connection!
  pageData: PageData
}

type PetPage6Connection {
  edges: [PetPage6Edge!]
  pageInfo: PetPage6PageInfo
}

type PetPage6Edge {
  cursor: String
  node: PetPage6
}

type PetPage6PageInfo {
  startCursor: String
  endCursor: String
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
}

type ListPetPage7 {
  page: PetPage7Connection!
  pageData: PageData
}

type PetPage7Connection {
  edges: [PetPage7Edge!]
  pageInfo: PetPage7PageInfo
}

type PetPage7Edge {
  cursor: String
  node: PetPage7
}

type PetPage7PageInfo {
  startCursor: String
  endCursor: String
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
}

type ListPetPage8 {
  page: PetPage8Connection!
  pageData: PageData
}

type PetPage8Connection {
  edges: [PetPage8Edge!]
  pageInfo: PetPage8PageInfo
}

type PetPage8Edge {
  cursor: String
  node: PetPage8
}

type PetPage8PageInfo {
  startCursor: String
  endCursor: String
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
}

type ListPetPage9 {
  page: PetPage9Connection!
  pageData: PageData
}

type PetPage9Connection {
  edges: [PetPage9Edge!]
  pageInfo: PetPage9PageInfo
}

type PetPage9Edge {
  cursor: String
  node: PetPage9
}

type PetPage9PageInfo {
  startCursor: String
  endCursor: String
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
}

type ListPetPage10 {
  page: PetPage10Connection!
  pageData: PageData
}

type PetPage10Connection {
  edges: [PetPage10Edge!]
  pageInfo: PetPage10PageInfo
}

type PetPage10Edge {
  cursor: String
  node: PetPage10
}

type PetPage10PageInfo {
  startCursor: String
  endCursor: String
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
}

type ListPetPage11 {
  page: PetPage11Connection!
  pageData: PageData
}

type PetPage11Connection {
  edges: [PetPage11Edge!]
  pageInfo: PetPage11PageInfo
}

type PetPage11Edge {
  cursor: String
  node: PetPage11
}

type PetPage11PageInfo {
  startCursor: String
  endCursor: String
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
}

type ListPetPage12 {
  page: PetPage12Connection!
  pageData: PageData
}

type PetPage12Connection {
  edges: [PetPage12Edge!]
  pageInfo: PetPage12PageInfo
}

type PetPage12Edge {
  cursor: String
  node: PetPage12
}

type PetPage12PageInfo {
  startCursor: String
  endCursor: String
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
}

type ListPortfolioPage0 {
  page: PortfolioPage0Connection!
  pageData: PageData
}

type PortfolioPage0Connection {
  edges: [PortfolioPage0Edge!]
  pageInfo: PortfolioPage0PageInfo
}

type PortfolioPage0Edge {
  cursor: String
  node: PortfolioPage0
}

type PortfolioPage0PageInfo {
  startCursor: String
  endCursor: String
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
}

type ListPortfolioPage1 {
  page: PortfolioPage1Connection!
  pageData: PageData
}

type PortfolioPage1Connection {
  edges: [PortfolioPage1Edge!]
  pageInfo: PortfolioPage1PageInfo
}

type PortfolioPage1Edge {
  cursor: String
  node: PortfolioPage1
}

type PortfolioPage1PageInfo {
  startCursor: String
  endCursor: String
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
}

type ListPortfolioPage2 {
  page: PortfolioPage2Connection!
  pageData: PageData
}

type PortfolioPage2Connection {
  edges: [PortfolioPage2Edge!]
  pageInfo: PortfolioPage2PageInfo
}

type PortfolioPage2Edge {
  cursor: String
  node: PortfolioPage2
}

type PortfolioPage2PageInfo {
  startCursor: String
  endCursor: String
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
}

type ListPortfolioPage3 {
  page: PortfolioPage3Connection!
  pageData: PageData
}

type PortfolioPage3Connection {
  edges: [PortfolioPage3Edge!]
  pageInfo: PortfolioPage3PageInfo
}

type PortfolioPage3Edge {
  cursor: String
  node: PortfolioPage3
}

type PortfolioPage3PageInfo {
  startCursor: String
  endCursor: String
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
}

type ListPortfolioPage4 {
  page: PortfolioPage4Connection!
  pageData: PageData
}

type PortfolioPage4Connection {
  edges: [PortfolioPage4Edge!]
  pageInfo: PortfolioPage4PageInfo
}

type PortfolioPage4Edge {
  cursor: String
  node: PortfolioPage4
}

type PortfolioPage4PageInfo {
  startCursor: String
  endCursor: String
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
}

type ListPortfolioPage5 {
  page: PortfolioPage5Connection!
  pageData: PageData
}

type PortfolioPage5Connection {
  edges: [PortfolioPage5Edge!]
  pageInfo: PortfolioPage5PageInfo
}

type PortfolioPage5Edge {
  cursor: String
  node: PortfolioPage5
}

type PortfolioPage5PageInfo {
  startCursor: String
  endCursor: String
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
}

type ListPortfolioPage6 {
  page: PortfolioPage6Connection!
  pageData: PageData
}

type PortfolioPage6Connection {
  edges: [PortfolioPage6Edge!]
  pageInfo: PortfolioPage6PageInfo
}

type PortfolioPage6Edge {
  cursor: String
  node: PortfolioPage6
}

type PortfolioPage6PageInfo {
  startCursor: String
  endCursor: String
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
}

type ListPortfolioPage7 {
  page: PortfolioPage7Connection!
  pageData: PageData
}

type PortfolioPage7Connection {
  edges: [PortfolioPage7Edge!]
  pageInfo: PortfolioPage7PageInfo
}

type PortfolioPage7Edge {
  cursor: String
  node: PortfolioPage7
}

type PortfolioPage7PageInfo {
  startCursor: String
  endCursor: String
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
}

type ListPortfolioPage8 {
  page: PortfolioPage8Connection!
  pageData: PageData
}

type PortfolioPage8Connection {
  edges: [PortfolioPage8Edge!]
  pageInfo: PortfolioPage8PageInfo
}

type PortfolioPage8Edge {
  cursor: String
  node: PortfolioPage8
}

type PortfolioPage8PageInfo {
  startCursor: String
  endCursor: String
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
}

type ListPortfolioPage9 {
  page: PortfolioPage9Connection!
  pageData: PageData
}

type PortfolioPage9Connection {
  edges: [PortfolioPage9Edge!]
  pageInfo: PortfolioPage9PageInfo
}

type PortfolioPage9Edge {
  cursor: String
  node: PortfolioPage9
}

type PortfolioPage9PageInfo {
  startCursor: String
  endCursor: String
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
}

type ListPortfolioPage10 {
  page: PortfolioPage10Connection!
  pageData: PageData
}

type PortfolioPage10Connection {
  edges: [PortfolioPage10Edge!]
  pageInfo: PortfolioPage10PageInfo
}

type PortfolioPage10Edge {
  cursor: String
  node: PortfolioPage10
}

type PortfolioPage10PageInfo {
  startCursor: String
  endCursor: String
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
}

type ListPortfolioPage11 {
  page: PortfolioPage11Connection!
  pageData: PageData
}

type PortfolioPage11Connection {
  edges: [PortfolioPage11Edge!]
  pageInfo: PortfolioPage11PageInfo
}

type PortfolioPage11Edge {
  cursor: String
  node: PortfolioPage11
}

type PortfolioPage11PageInfo {
  startCursor: String
  endCursor: String
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
}

type ListPortfolioPage12 {
  page: PortfolioPage12Connection!
  pageData: PageData
}

type PortfolioPage12Connection {
  edges: [PortfolioPage12Edge!]
  pageInfo: PortfolioPage12PageInfo
}

type PortfolioPage12Edge {
  cursor: String
  node: PortfolioPage12
}

type PortfolioPage12PageInfo {
  startCursor: String
  endCursor: String
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
}

type DataUser {
  password: String!
  updateDate: UpdateDate!
  username: String!
  picture: String!
  role: String!
  status: Boolean!
  oAuth: OAuth!
  siteId: String!
}

type OAuth {
  provider: String!
}

type PetUser {
  _id: ID!
  data: DataUser!
  email: String!
}

type PortfolioUser {
  _id: ID!
  data: DataUser!
  email: String!
}

type DataTeam {
  name: String!
  description: String!
  thumbnailUrl: String
  siteId: String
  socialMedia: [SocialMedia!]!
  updateDate: UpdateDate!
}

type SocialMedia {
  label: String!
  url: String!
}

type PetTeam {
  _id: ID!
  data: DataTeam!
  parentId: String!
  slug: String!
  comments: [PetComment]
}

type ListPetTeam {
  page: PetTeamConnection!
  pageData: PageData
}

type PetTeamConnection {
  edges: [PetTeamEdge!]
  pageInfo: PetTeamPageInfo
}

type PetTeamEdge {
  cursor: String
  node: PetTeam
}

type PetTeamPageInfo {
  startCursor: String
  endCursor: String
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
}

type FoodTeam {
  _id: ID!
  data: DataTeam!
  parentId: String!
  slug: String!
}

type PortfolioTeam {
  _id: ID!
  data: DataTeam!
  parentId: String!
  slug: String!
  comments: [PortfolioComment]
}

type ListPortfolioTeam {
  page: PortfolioTeamConnection!
  pageData: PageData
}

type PortfolioTeamConnection {
  edges: [PortfolioTeamEdge!]
  pageInfo: PortfolioTeamPageInfo
}

type PortfolioTeamEdge {
  cursor: String
  node: PortfolioTeam
}

type PortfolioTeamPageInfo {
  startCursor: String
  endCursor: String
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
}

type HardwareStoreTeam {
  _id: ID!
  data: DataTeam!
  parentId: String!
  slug: String!
}

type DataService {
  name: String!
  description: String!
  thumbnailUrl: String
  type: Type!
  inStock: Float
  price: Float
  discountPrice: Float
  promotion: Promotion
  details: String
  featured: String
  specs: String
  tags: [Tags!]
  images: [Image!]
  updateDate: UpdateDate!
  likes: [String!]
  siteId: String!
}

type PetService {
  _id: ID!
  data: DataService!
  slug: String!
  parentId: String!
  comments: [PetComment]
}

type ListPetService {
  page: PetServiceConnection!
  pageData: PageData
}

type PetServiceConnection {
  edges: [PetServiceEdge!]
  pageInfo: PetServicePageInfo
}

type PetServiceEdge {
  cursor: String
  node: PetService
}

type PetServicePageInfo {
  startCursor: String
  endCursor: String
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
}

type PortfolioService {
  _id: ID!
  data: DataService!
  slug: String!
  parentId: String!
  comments: [PortfolioComment]
}

type ListPortfolioService {
  page: PortfolioServiceConnection!
  pageData: PageData
}

type PortfolioServiceConnection {
  edges: [PortfolioServiceEdge!]
  pageInfo: PortfolioServicePageInfo
}

type PortfolioServiceEdge {
  cursor: String
  node: PortfolioService
}

type PortfolioServicePageInfo {
  startCursor: String
  endCursor: String
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
}

type Query {
  petGetSite(id: String!): PetSite!
  petGetSites: [PetSite!]!
  petGetSitesByPagination(listInput: ListInput!): [PetSite!]!
  petGetSitesWithCursor(args: ConnectionArgs!): ListPetSite!
  petGetPage0(id: String!): PetPage0!
  petGetPage0BySlug(slug: String!, siteId: String!): PetPage0!
  petGetPages0: [PetPage0!]!
  petGetPages0ByParentId(parentId: String!): [PetPage0!]!
  petGetPages0BySiteId(siteId: String!): [PetPage0!]!
  petGetPages0ByParentIdByPagination(listInput: ListInput!, parentId: String!): [PetPage0!]!
  petGetPages0WithCursor(args: ConnectionArgs!, parentId: String!): ListPetPage0!
  petGetPage1(id: String!): PetPage1!
  petGetPage1BySlug(slug: String!, siteId: String!): PetPage1!
  petGetPages1: [PetPage1!]!
  petGetPages1BySiteId(siteId: String!): [PetPage1!]!
  petGetPages1ByParentId(parentId: String!): [PetPage1!]!
  petGetPages1ByParentIdByPagination(listInput: ListInput!, parentId: String!): [PetPage1!]!
  petGetPages1WithCursor(args: ConnectionArgs!, parentId: String!): ListPetPage1!
  petGetPage2(id: String!): PetPage2!
  petGetPage2BySlug(slug: String!, siteId: String!): PetPage2!
  petGetPages2: [PetPage2!]!
  petGetPages2ByParentId(parentId: String!): [PetPage2!]!
  petGetPages2BySiteId(siteId: String!): [PetPage2!]!
  petGetPages2ByParentIdByPagination(listInput: ListInput!, parentId: String!): [PetPage2!]!
  petGetPages2WithCursor(args: ConnectionArgs!, parentId: String!): ListPetPage2!
  petGetPage3(id: String!): PetPage3!
  petGetPage3BySlug(slug: String!, siteId: String!): PetPage3!
  petGetPages3: [PetPage3!]!
  petGetPages3ByParentId(parentId: String!): [PetPage3!]!
  petGetPages3BySiteId(siteId: String!): [PetPage3!]!
  petGetPages3ByParentIdByPagination(listInput: ListInput!, parentId: String!): [PetPage3!]!
  petGetPages3WithCursor(args: ConnectionArgs!, parentId: String!): ListPetPage3!
  petGetPage4(id: String!): PetPage4!
  petGetPage4BySlug(slug: String!, siteId: String!): PetPage4!
  petGetPages4: [PetPage4!]!
  petGetPages4ByParentId(parentId: String!): [PetPage4!]!
  petGetPages4BySiteId(siteId: String!): [PetPage4!]!
  petGetPages4ByParentIdByPagination(listInput: ListInput!, parentId: String!): [PetPage4!]!
  petGetPages4WithCursor(args: ConnectionArgs!, parentId: String!): ListPetPage4!
  petGetPage5(id: String!): PetPage5!
  petGetPage5BySlug(slug: String!, siteId: String!): PetPage5!
  petGetPages5: [PetPage5!]!
  petGetPages5ByParentId(parentId: String!): [PetPage5!]!
  petGetPages5BySiteId(siteId: String!): [PetPage5!]!
  petGetPages5ByParentIdByPagination(listInput: ListInput!, parentId: String!): [PetPage5!]!
  petGetPages5WithCursor(args: ConnectionArgs!, parentId: String!): ListPetPage5!
  petGetPage6(id: String!): PetPage6!
  petGetPage6BySlug(slug: String!, siteId: String!): PetPage6!
  petGetPages6: [PetPage6!]!
  petGetPages6ByParentId(parentId: String!): [PetPage6!]!
  petGetPages6BySiteId(siteId: String!): [PetPage6!]!
  petGetPages6ByParentIdByPagination(listInput: ListInput!, parentId: String!): [PetPage6!]!
  petGetPages6WithCursor(args: ConnectionArgs!, parentId: String!): ListPetPage6!
  petGetPage7(id: String!): PetPage7!
  petGetPage7BySlug(slug: String!, siteId: String!): PetPage7!
  petGetPages7: [PetPage7!]!
  petGetPages7ByParentId(parentId: String!): [PetPage7!]!
  petGetPages7BySiteId(siteId: String!): [PetPage7!]!
  petGetPages7ByParentIdByPagination(listInput: ListInput!, parentId: String!): [PetPage7!]!
  petGetPages7WithCursor(args: ConnectionArgs!, parentId: String!): ListPetPage7!
  petGetPage8(id: String!): PetPage8!
  petGetPage8BySlug(slug: String!, siteId: String!): PetPage8!
  petGetPages8: [PetPage8!]!
  petGetPages8ByParentId(parentId: String!): [PetPage8!]!
  petGetPages8BySiteId(siteId: String!): [PetPage8!]!
  petGetPages8ByParentIdByPagination(listInput: ListInput!, parentId: String!): [PetPage8!]!
  petGetPages8WithCursor(args: ConnectionArgs!, parentId: String!): ListPetPage8!
  petGetPage9(id: String!): PetPage9!
  petGetPage9BySlug(slug: String!, siteId: String!): PetPage9!
  petGetPages9: [PetPage9!]!
  petGetPages9ByParentId(parentId: String!): [PetPage9!]!
  petGetPages9BySiteId(siteId: String!): [PetPage9!]!
  petGetPages9ByParentIdByPagination(listInput: ListInput!, parentId: String!): [PetPage9!]!
  petGetPages9WithCursor(args: ConnectionArgs!, parentId: String!): ListPetPage9!
  petGetPage10(id: String!): PetPage10!
  petGetPage10BySlug(slug: String!, siteId: String!): PetPage10!
  petGetPages10: [PetPage10!]!
  petGetPages10ByParentId(parentId: String!): [PetPage10!]!
  petGetPages10BySiteId(siteId: String!): [PetPage10!]!
  petGetPages10ByParentIdByPagination(listInput: ListInput!, parentId: String!): [PetPage10!]!
  petGetPages10WithCursor(args: ConnectionArgs!, parentId: String!): ListPetPage10!
  petGetPage11(id: String!): PetPage11!
  petGetPage11BySlug(slug: String!, siteId: String!): PetPage11!
  petGetPages11: [PetPage11!]!
  petGetPages11ByParentId(parentId: String!): [PetPage11!]!
  petGetPages11BySiteId(siteId: String!): [PetPage11!]!
  petGetPages11ByParentIdByPagination(listInput: ListInput!, parentId: String!): [PetPage11!]!
  petGetPages11WithCursor(args: ConnectionArgs!, parentId: String!): ListPetPage11!
  petGetPage12(id: String!): PetPage12!
  petGetPage12BySlug(slug: String!, siteId: String!): PetPage12!
  petGetPages12: [PetPage12!]!
  petGetPages12ByParentId(parentId: String!): [PetPage12!]!
  petGetPages12BySiteId(siteId: String!): [PetPage12!]!
  petGetPages12ByParentIdByPagination(listInput: ListInput!, parentId: String!): [PetPage12!]!
  petGetPages12WithCursor(args: ConnectionArgs!, parentId: String!): ListPetPage12!
  petGetProduct(id: String!): PetProduct!
  petGetProductBySlug(slug: String!, siteId: String!): PetProduct!
  petGetProducts: [PetProduct!]!
  petGetProductsBySiteId(siteId: String!): [PetProduct!]!
  petGetProductsByParentId(parentId: String!): [PetProduct!]!
  petGetProductsByParentIdByPagination(listInput: ListInput!, parentId: String!): [PetProduct!]!
  petGetProductsWithCursor(args: ConnectionArgs!, parentId: String!): ListPetProduct!
  petGetComment(id: String!): PetComment!
  petGetCommentsByParentId(parentId: String!): [PetComment!]!
  petGetAdoption(id: String!): PetAdoption!
  petGetAdoptionBySlug(slug: String!, siteId: String!): PetAdoption!
  petGetAdoptions: [PetAdoption!]!
  petGetAdoptionsBySiteId(siteId: String!): [PetAdoption!]!
  petGetAdoptionsByParentId(parentId: String!): [PetAdoption!]!
  petGetAdoptionsByParentIdByPagination(listInput: ListInput!, parentId: String!): [PetAdoption!]!
  petGetAdoptionsWithCursor(args: ConnectionArgs!, parentId: String!): ListPetAdoption!
  petGetArticle(id: String!): PetArticle!
  petGetArticleBySlug(siteId: String!, slug: String!): PetArticle!
  petGetArticles: [PetArticle!]!
  petGetArticlesByParentId(parentId: String!): [PetArticle!]!
  petGetArticlesBySiteId(siteId: String!): [PetArticle!]!
  petGetArticlesByParentIdByPagination(listInput: ListInput!, parentId: String!): [PetArticle!]!
  petGetArticlesWithCursor(args: ConnectionArgs!, parentId: String!): ListPetArticle!
  petGetUser(id: String!): PetUser!
  petGetUserByEmail(email: String!, siteId: String!): PetUser!
  petGetUsers: [PetUser!]!
  petGetTeam(id: String!): PetTeam!
  petGetTeamBySlug(slug: String!, siteId: String!): PetTeam!
  petGetTeams: [PetTeam!]!
  petGetTeamsBySiteId(siteId: String!): [PetTeam!]!
  petGetTeamsByParentId(parentId: String!): [PetTeam!]!
  petGetTeamsByParentIdByPagination(listInput: ListInput!, parentId: String!): [PetTeam!]!
  petGetTeamsWithCursor(args: ConnectionArgs!, parentId: String!): ListPetTeam!
  portfolioGetSite(id: String!): PortfolioSite!
  portfolioGetSites: [PortfolioSite!]!
  portfolioGetSitesByPagination(listInput: ListInput!): [PortfolioSite!]!
  portfolioGetSitesWithCursor(args: ConnectionArgs!): ListPortfolioSite!
  portfolioGetPage0(id: String!): PortfolioPage0!
  portfolioGetPage0BySlug(slug: String!, siteId: String!): PortfolioPage0!
  portfolioGetPages0: [PortfolioPage0!]!
  portfolioGetPages0ByParentId(parentId: String!): [PortfolioPage0!]!
  portfolioGetPages0BySiteId(siteId: String!): [PortfolioPage0!]!
  portfolioGetPages0ByParentIdByPagination(listInput: ListInput!, parentId: String!): [PortfolioPage0!]!
  portfolioGetPages0WithCursor(args: ConnectionArgs!, parentId: String!): ListPortfolioPage0!
  portfolioGetPage1(id: String!): PortfolioPage1!
  portfolioGetPage1BySlug(slug: String!, siteId: String!): PortfolioPage1!
  portfolioGetPages1: [PortfolioPage1!]!
  portfolioGetPages1BySiteId(siteId: String!): [PortfolioPage1!]!
  portfolioGetPages1ByParentId(parentId: String!): [PortfolioPage1!]!
  portfolioGetPages1ByParentIdByPagination(listInput: ListInput!, parentId: String!): [PortfolioPage1!]!
  portfolioGetPages1WithCursor(args: ConnectionArgs!, parentId: String!): ListPortfolioPage1!
  portfolioGetPage2(id: String!): PortfolioPage2!
  portfolioGetPage2BySlug(slug: String!, siteId: String!): PortfolioPage2!
  portfolioGetPages2: [PortfolioPage2!]!
  portfolioGetPages2ByParentId(parentId: String!): [PortfolioPage2!]!
  portfolioGetPages2BySiteId(siteId: String!): [PortfolioPage2!]!
  portfolioGetPages2ByParentIdByPagination(listInput: ListInput!, parentId: String!): [PortfolioPage2!]!
  portfolioGetPages2WithCursor(args: ConnectionArgs!, parentId: String!): ListPortfolioPage2!
  portfolioGetPage3(id: String!): PortfolioPage3!
  portfolioGetPage3BySlug(slug: String!, siteId: String!): PortfolioPage3!
  portfolioGetPages3: [PortfolioPage3!]!
  portfolioGetPages3ByParentId(parentId: String!): [PortfolioPage3!]!
  portfolioGetPages3BySiteId(siteId: String!): [PortfolioPage3!]!
  portfolioGetPages3ByParentIdByPagination(listInput: ListInput!, parentId: String!): [PortfolioPage3!]!
  portfolioGetPages3WithCursor(args: ConnectionArgs!, parentId: String!): ListPortfolioPage3!
  portfolioGetPage4(id: String!): PortfolioPage4!
  portfolioGetPage4BySlug(slug: String!, siteId: String!): PortfolioPage4!
  portfolioGetPages4: [PortfolioPage4!]!
  portfolioGetPages4ByParentId(parentId: String!): [PortfolioPage4!]!
  portfolioGetPages4BySiteId(siteId: String!): [PortfolioPage4!]!
  portfolioGetPages4ByParentIdByPagination(listInput: ListInput!, parentId: String!): [PortfolioPage4!]!
  portfolioGetPages4WithCursor(args: ConnectionArgs!, parentId: String!): ListPortfolioPage4!
  portfolioGetPage5(id: String!): PortfolioPage5!
  portfolioGetPage5BySlug(slug: String!, siteId: String!): PortfolioPage5!
  portfolioGetPages5: [PortfolioPage5!]!
  portfolioGetPages5ByParentId(parentId: String!): [PortfolioPage5!]!
  portfolioGetPages5BySiteId(siteId: String!): [PortfolioPage5!]!
  portfolioGetPages5ByParentIdByPagination(listInput: ListInput!, parentId: String!): [PortfolioPage5!]!
  portfolioGetPages5WithCursor(args: ConnectionArgs!, parentId: String!): ListPortfolioPage5!
  portfolioGetPage6(id: String!): PortfolioPage6!
  portfolioGetPage6BySlug(slug: String!, siteId: String!): PortfolioPage6!
  portfolioGetPages6: [PortfolioPage6!]!
  portfolioGetPages6ByParentId(parentId: String!): [PortfolioPage6!]!
  portfolioGetPages6BySiteId(siteId: String!): [PortfolioPage6!]!
  portfolioGetPages6ByParentIdByPagination(listInput: ListInput!, parentId: String!): [PortfolioPage6!]!
  portfolioGetPages6WithCursor(args: ConnectionArgs!, parentId: String!): ListPortfolioPage6!
  portfolioGetPage7(id: String!): PortfolioPage7!
  portfolioGetPage7BySlug(slug: String!, siteId: String!): PortfolioPage7!
  portfolioGetPages7: [PortfolioPage7!]!
  portfolioGetPages7ByParentId(parentId: String!): [PortfolioPage7!]!
  portfolioGetPages7BySiteId(siteId: String!): [PortfolioPage7!]!
  portfolioGetPages7ByParentIdByPagination(listInput: ListInput!, parentId: String!): [PortfolioPage7!]!
  portfolioGetPages7WithCursor(args: ConnectionArgs!, parentId: String!): ListPortfolioPage7!
  portfolioGetPage8(id: String!): PortfolioPage8!
  portfolioGetPage8BySlug(slug: String!, siteId: String!): PortfolioPage8!
  portfolioGetPages8: [PortfolioPage8!]!
  portfolioGetPages8ByParentId(parentId: String!): [PortfolioPage8!]!
  portfolioGetPages8BySiteId(siteId: String!): [PortfolioPage8!]!
  portfolioGetPages8ByParentIdByPagination(listInput: ListInput!, parentId: String!): [PortfolioPage8!]!
  portfolioGetPages8WithCursor(args: ConnectionArgs!, parentId: String!): ListPortfolioPage8!
  portfolioGetPage9(id: String!): PortfolioPage9!
  portfolioGetPage9BySlug(slug: String!, siteId: String!): PortfolioPage9!
  portfolioGetPages9: [PortfolioPage9!]!
  portfolioGetPages9ByParentId(parentId: String!): [PortfolioPage9!]!
  portfolioGetPages9BySiteId(siteId: String!): [PortfolioPage9!]!
  portfolioGetPages9ByParentIdByPagination(listInput: ListInput!, parentId: String!): [PortfolioPage9!]!
  portfolioGetPages9WithCursor(args: ConnectionArgs!, parentId: String!): ListPortfolioPage9!
  portfolioGetPage10(id: String!): PortfolioPage10!
  portfolioGetPage10BySlug(slug: String!, siteId: String!): PortfolioPage10!
  portfolioGetPages10: [PortfolioPage10!]!
  portfolioGetPages10ByParentId(parentId: String!): [PortfolioPage10!]!
  portfolioGetPages10BySiteId(siteId: String!): [PortfolioPage10!]!
  portfolioGetPages10ByParentIdByPagination(listInput: ListInput!, parentId: String!): [PortfolioPage10!]!
  portfolioGetPages10WithCursor(args: ConnectionArgs!, parentId: String!): ListPortfolioPage10!
  portfolioGetPage11(id: String!): PortfolioPage11!
  portfolioGetPage11BySlug(slug: String!, siteId: String!): PortfolioPage11!
  portfolioGetPages11: [PortfolioPage11!]!
  portfolioGetPages11ByParentId(parentId: String!): [PortfolioPage11!]!
  portfolioGetPages11BySiteId(siteId: String!): [PortfolioPage11!]!
  portfolioGetPages11ByParentIdByPagination(listInput: ListInput!, parentId: String!): [PortfolioPage11!]!
  portfolioGetPages11WithCursor(args: ConnectionArgs!, parentId: String!): ListPortfolioPage11!
  portfolioGetPage12(id: String!): PortfolioPage12!
  portfolioGetPage12BySlug(slug: String!, siteId: String!): PortfolioPage12!
  portfolioGetPages12: [PortfolioPage12!]!
  portfolioGetPages12ByParentId(parentId: String!): [PortfolioPage12!]!
  portfolioGetPages12BySiteId(siteId: String!): [PortfolioPage12!]!
  portfolioGetPages12ByParentIdByPagination(listInput: ListInput!, parentId: String!): [PortfolioPage12!]!
  portfolioGetPages12WithCursor(args: ConnectionArgs!, parentId: String!): ListPortfolioPage12!
  portfolioGetProduct(id: String!): PortfolioProduct!
  portfolioGetProductBySlug(slug: String!, siteId: String!): PortfolioProduct!
  portfolioGetProducts: [PortfolioProduct!]!
  portfolioGetProductsBySiteId(siteId: String!): [PortfolioProduct!]!
  portfolioGetProductsByParentId(parentId: String!): [PortfolioProduct!]!
  portfolioGetProductsByParentIdByPagination(listInput: ListInput!, parentId: String!): [PortfolioProduct!]!
  portfolioGetProductsWithCursor(args: ConnectionArgs!, parentId: String!): ListPortfolioProduct!
  portfolioGetComment(id: String!): PortfolioComment!
  portfolioGetCommentsByParentId(parentId: String!): [PortfolioComment!]!
  portfolioGetArticle(id: String!): PortfolioArticle!
  portfolioGetArticleBySlug(siteId: String!, slug: String!): PortfolioArticle!
  portfolioGetArticles: [PortfolioArticle!]!
  portfolioGetArticlesByParentId(parentId: String!): [PortfolioArticle!]!
  portfolioGetArticlesBySiteId(siteId: String!): [PortfolioArticle!]!
  portfolioGetArticlesByParentIdByPagination(listInput: ListInput!, parentId: String!): [PortfolioArticle!]!
  portfolioGetArticlesWithCursor(args: ConnectionArgs!, parentId: String!): ListPortfolioArticle!
  portfolioGetUser(id: String!): PortfolioUser!
  portfolioGetUserByEmail(email: String!, siteId: String!): PortfolioUser!
  portfolioGetUsers: [PortfolioUser!]!
  portfolioGetTeam(id: String!): PortfolioTeam!
  portfolioGetTeamBySlug(slug: String!, siteId: String!): PortfolioTeam!
  portfolioGetTeams: [PortfolioTeam!]!
  portfolioGetTeamsBySiteId(siteId: String!): [PortfolioTeam!]!
  portfolioGetTeamsByParentId(parentId: String!): [PortfolioTeam!]!
  portfolioGetTeamsByParentIdByPagination(listInput: ListInput!, parentId: String!): [PortfolioTeam!]!
  portfolioGetTeamsWithCursor(args: ConnectionArgs!, parentId: String!): ListPortfolioTeam!
  petGetService(id: String!): PetService!
  petGetServiceBySlug(slug: String!, siteId: String!): PetService!
  petGetServices: [PetService!]!
  petGetServicesBySiteId(siteId: String!): [PetService!]!
  petGetServicesByParentId(parentId: String!): [PetService!]!
  petGetServicesByParentIdByPagination(listInput: ListInput!, parentId: String!): [PetService!]!
  petGetServicesWithCursor(args: ConnectionArgs!, parentId: String!): ListPetService!
  portfolioGetService(id: String!): PortfolioService!
  portfolioGetServiceBySlug(slug: String!, siteId: String!): PortfolioService!
  portfolioGetServices: [PortfolioService!]!
  portfolioGetServicesBySiteId(siteId: String!): [PortfolioService!]!
  portfolioGetServicesByParentId(parentId: String!): [PortfolioService!]!
  portfolioGetServicesByParentIdByPagination(listInput: ListInput!, parentId: String!): [PortfolioService!]!
  portfolioGetServicesWithCursor(args: ConnectionArgs!, parentId: String!): ListPortfolioService!
}

input ListInput {
  """classical limit"""
  limit: Float!

  """classical offset"""
  offset: Float!
}

input ConnectionArgs {
  """Paginate before opaque cursor"""
  before: String

  """Paginate after opaque cursor"""
  after: String

  """Paginate first"""
  first: Float

  """Paginate last"""
  last: Float
}

type Mutation {
  petCreateSite(input: CreateSite!): PetSite!
  petUpdateSite(input: UpdateSite!): PetSite!
  petUpdateDbSite(input: UpdateDB!): PetSite!
  petUpdateAdminSite(input: UpdateAdminSite!): PetSite!
  petUpdateImageSite(input: UpdateImage!): PetSite!
  petDeleteSite(id: String!): String!
  petDeleteSites(ids: [String!]!): [String!]!
  petDeleteAllSites: String!
  petCreatePage0(input: CreatePage!): PetPage0!
  petUpdatePage0(input: UpdatePage!): PetPage0!
  petUpdateImagePage0(input: UpdateImage!): PetPage0!
  petDeletePage0(id: String!): String!
  petDeletePages0(ids: [String!]!): [String!]!
  petDeleteAllPages0: String!
  petCreatePage1(input: CreatePage!): PetPage1!
  petUpdatePage1(input: UpdatePage!): PetPage1!
  petUpdateImagePage1(input: UpdateImage!): PetPage1!
  petDeletePage1(id: String!): String!
  petDeletePages1(ids: [String!]!): [String!]!
  petDeleteAllPages1: String!
  petCreatePage2(input: CreatePage!): PetPage2!
  petUpdatePage2(input: UpdatePage!): PetPage2!
  petUpdateImagePage2(input: UpdateImage!): PetPage2!
  petDeletePage2(id: String!): String!
  petDeletePages2(ids: [String!]!): [String!]!
  petDeleteAllPages2: String!
  petCreatePage3(input: CreatePage!): PetPage3!
  petUpdatePage3(input: UpdatePage!): PetPage3!
  petUpdateImagePage3(input: UpdateImage!): PetPage3!
  petDeletePage3(id: String!): String!
  petDeletePages3(ids: [String!]!): [String!]!
  petDeleteAllPages3: String!
  petCreatePage4(input: CreatePage!): PetPage4!
  petUpdatePage4(input: UpdatePage!): PetPage4!
  petUpdateImagePage4(input: UpdateImage!): PetPage4!
  petDeletePage4(id: String!): String!
  petDeletePages4(ids: [String!]!): [String!]!
  petDeleteAllPages4: String!
  petCreatePage5(input: CreatePage!): PetPage5!
  petUpdatePage5(input: UpdatePage!): PetPage5!
  petUpdateImagePage5(input: UpdateImage!): PetPage5!
  petDeletePage5(id: String!): String!
  petDeletePages5(ids: [String!]!): [String!]!
  petDeleteAllPages5: String!
  petCreatePage6(input: CreatePage!): PetPage6!
  petUpdatePage6(input: UpdatePage!): PetPage6!
  petUpdateImagePage6(input: UpdateImage!): PetPage6!
  petDeletePage6(id: String!): String!
  petDeletePages6(ids: [String!]!): [String!]!
  petDeleteAllPages6: String!
  petCreatePage7(input: CreatePage!): PetPage7!
  petUpdatePage7(input: UpdatePage!): PetPage7!
  petUpdateImagePage7(input: UpdateImage!): PetPage7!
  petDeletePage7(id: String!): String!
  petDeletePages7(ids: [String!]!): [String!]!
  petDeleteAllPages7: String!
  petCreatePage8(input: CreatePage!): PetPage8!
  petUpdatePage8(input: UpdatePage!): PetPage8!
  petUpdateImagePage8(input: UpdateImage!): PetPage8!
  petDeletePage8(id: String!): String!
  petDeletePages8(ids: [String!]!): [String!]!
  petDeleteAllPages8: String!
  petCreatePage9(input: CreatePage!): PetPage9!
  petUpdatePage9(input: UpdatePage!): PetPage9!
  petUpdateImagePage9(input: UpdateImage!): PetPage9!
  petDeletePage9(id: String!): String!
  petDeletePages9(ids: [String!]!): [String!]!
  petDeleteAllPages9: String!
  petCreatePage10(input: CreatePage!): PetPage10!
  petUpdatePage10(input: UpdatePage!): PetPage10!
  petUpdateImagePage10(input: UpdateImage!): PetPage10!
  petDeletePage10(id: String!): String!
  petDeletePages10(ids: [String!]!): [String!]!
  petDeleteAllPages10: String!
  petCreatePage11(input: CreatePage!): PetPage11!
  petUpdatePage11(input: UpdatePage!): PetPage11!
  petUpdateImagePage11(input: UpdateImage!): PetPage11!
  petDeletePage11(id: String!): String!
  petDeletePages11(ids: [String!]!): [String!]!
  petDeleteAllPages11: String!
  petCreatePage12(input: CreatePage!): PetPage12!
  petUpdatePage12(input: UpdatePage!): PetPage12!
  petUpdateImagePage12(input: UpdateImage!): PetPage12!
  petDeletePage12(id: String!): String!
  petDeletePages12(ids: [String!]!): [String!]!
  petDeleteAllPages12: String!
  petCreateProduct(input: CreateProduct!): PetProduct!
  petUpdateProduct(input: UpdateProduct!): PetProduct!
  petUpdateDetailProduct(input: UpdateDetailProduct!): PetProduct!
  petUpdatePriceProduct(input: UpdatePriceProduct!): PetProduct!
  petUpdateSpecsProduct(input: UpdateSpecsProduct!): PetProduct!
  petUpdateTagsProduct(input: UpdateTagsProduct!): PetProduct!
  petUpdateLikesProduct(input: UpdateLikesProduct!): PetProduct!
  petUpdateDisLikesProduct(input: UpdateLikesProduct!): PetProduct!
  petUpdateImageProduct(input: UpdateImageProduct!): PetProduct!
  petDeleteProduct(id: String!): String!
  petDeleteProducts(ids: [String!]!): [String!]!
  petDeleteAllProducts: String!
  petCreateComment(input: CreateComment!): PetComment!
  petUpdateComment(input: UpdateComment!): PetComment!
  petUpdateLikesComment(input: UpdateLikesComment!): PetComment!
  petUpdateDisLikesComment(input: UpdateLikesComment!): PetComment!
  petDeleteComment(id: String!): String!
  petDeleteComments(ids: [String!]!): [String!]!
  petDeleteAllComments: String!
  petCreateAdoption(input: CreateAdoption!): PetAdoption!
  petUpdateAdoption(input: UpdateAdoption!): PetAdoption!
  petUpdateDetailAdoption(input: UpdateDetailAdoption!): PetAdoption!
  petUpdateSpecsAdoption(input: UpdateSpecsAdoption!): PetAdoption!
  petUpdateTagsAdoption(input: UpdateTagsAdoption!): PetAdoption!
  petUpdateLikesAdoption(input: UpdateLikesAdoption!): PetAdoption!
  petUpdateDisLikesAdoption(input: UpdateLikesAdoption!): PetAdoption!
  petUpdateImageAdoption(input: UpdateImageAdoption!): PetAdoption!
  petUpdateImageSeoAdoption(input: UpdateImageSeo!): PetAdoption!
  petDeleteAdoption(id: String!): String!
  petDeleteAdoptions(ids: [String!]!): [String!]!
  petDeleteAllAdoptions: String!
  petCreateArticle(input: CreateArticle!): PetArticle!
  petUpdateArticle(input: UpdateArticle!): PetArticle!
  petUpdateContentArticle(input: UpdateContentArticle!): PetArticle!
  petUpdateTagsArticle(input: UpdateTagsArticle!): PetArticle!
  petUpdateLikesArticle(input: UpdateLikesArticle!): PetArticle!
  petUpdateDisLikesArticle(input: UpdateLikesArticle!): PetArticle!
  petUpdateImageArticle(input: UpdateImage!): PetArticle!
  petDeleteArticle(id: String!): String!
  petDeleteArticles(ids: [String!]!): [String!]!
  petDeleteAllArticles: String!
  petCreateUser(input: CreateUser!): PetUser!
  petCreateTeam(input: CreateTeam!): PetTeam!
  petUpdateTeam(input: UpdateTeam!): PetTeam!
  petUpdateDetailTeam(input: UpdateDetailTeam!): PetTeam!
  petUpdateSpecsTeam(input: UpdateSpecsTeam!): PetTeam!
  petUpdateTagsTeam(input: UpdateTagsTeam!): PetTeam!
  petUpdateLikesTeam(input: UpdateLikesTeam!): PetTeam!
  petUpdateDisLikesTeam(input: UpdateLikesTeam!): PetTeam!
  petUpdateImageSeoTeam(input: UpdateImageSeo!): PetTeam!
  petDeleteTeam(id: String!): String!
  petDeleteTeams(ids: [String!]!): [String!]!
  petDeleteAllTeams: String!
  portfolioCreateSite(input: CreateSite!): PortfolioSite!
  portfolioUpdateSite(input: UpdateSite!): PortfolioSite!
  portfolioUpdateDbSite(input: UpdateDB!): PortfolioSite!
  portfolioUpdateAdminSite(input: UpdateAdminSite!): PortfolioSite!
  portfolioUpdateImageSite(input: UpdateImage!): PortfolioSite!
  portfolioDeleteSite(id: String!): String!
  portfolioDeleteSites(ids: [String!]!): [String!]!
  portfolioDeleteAllSites: String!
  portfolioCreatePage0(input: CreatePage!): PortfolioPage0!
  portfolioUpdatePage0(input: UpdatePage!): PortfolioPage0!
  portfolioUpdateImagePage0(input: UpdateImage!): PortfolioPage0!
  portfolioDeletePage0(id: String!): String!
  portfolioDeletePages0(ids: [String!]!): [String!]!
  portfolioDeleteAllPages0: String!
  portfolioCreatePage1(input: CreatePage!): PortfolioPage1!
  portfolioUpdatePage1(input: UpdatePage!): PortfolioPage1!
  portfolioUpdateImagePage1(input: UpdateImage!): PortfolioPage1!
  portfolioDeletePage1(id: String!): String!
  portfolioDeletePages1(ids: [String!]!): [String!]!
  portfolioDeleteAllPages1: String!
  portfolioCreatePage2(input: CreatePage!): PortfolioPage2!
  portfolioUpdatePage2(input: UpdatePage!): PortfolioPage2!
  portfolioUpdateImagePage2(input: UpdateImage!): PortfolioPage2!
  portfolioDeletePage2(id: String!): String!
  portfolioDeletePages2(ids: [String!]!): [String!]!
  portfolioDeleteAllPages2: String!
  portfolioCreatePage3(input: CreatePage!): PortfolioPage3!
  portfolioUpdatePage3(input: UpdatePage!): PortfolioPage3!
  portfolioUpdateImagePage3(input: UpdateImage!): PortfolioPage3!
  portfolioDeletePage3(id: String!): String!
  portfolioDeletePages3(ids: [String!]!): [String!]!
  portfolioDeleteAllPages3: String!
  portfolioCreatePage4(input: CreatePage!): PortfolioPage4!
  portfolioUpdatePage4(input: UpdatePage!): PortfolioPage4!
  portfolioUpdateImagePage4(input: UpdateImage!): PortfolioPage4!
  portfolioDeletePage4(id: String!): String!
  portfolioDeletePages4(ids: [String!]!): [String!]!
  portfolioDeleteAllPages4: String!
  portfolioCreatePage5(input: CreatePage!): PortfolioPage5!
  portfolioUpdatePage5(input: UpdatePage!): PortfolioPage5!
  portfolioUpdateImagePage5(input: UpdateImage!): PortfolioPage5!
  portfolioDeletePage5(id: String!): String!
  portfolioDeletePages5(ids: [String!]!): [String!]!
  portfolioDeleteAllPages5: String!
  portfolioCreatePage6(input: CreatePage!): PortfolioPage6!
  portfolioUpdatePage6(input: UpdatePage!): PortfolioPage6!
  portfolioUpdateImagePage6(input: UpdateImage!): PortfolioPage6!
  portfolioDeletePage6(id: String!): String!
  portfolioDeletePages6(ids: [String!]!): [String!]!
  portfolioDeleteAllPages6: String!
  portfolioCreatePage7(input: CreatePage!): PortfolioPage7!
  portfolioUpdatePage7(input: UpdatePage!): PortfolioPage7!
  portfolioUpdateImagePage7(input: UpdateImage!): PortfolioPage7!
  portfolioDeletePage7(id: String!): String!
  portfolioDeletePages7(ids: [String!]!): [String!]!
  portfolioDeleteAllPages7: String!
  portfolioCreatePage8(input: CreatePage!): PortfolioPage8!
  portfolioUpdatePage8(input: UpdatePage!): PortfolioPage8!
  portfolioUpdateImagePage8(input: UpdateImage!): PortfolioPage8!
  portfolioDeletePage8(id: String!): String!
  portfolioDeletePages8(ids: [String!]!): [String!]!
  portfolioDeleteAllPages8: String!
  portfolioCreatePage9(input: CreatePage!): PortfolioPage9!
  portfolioUpdatePage9(input: UpdatePage!): PortfolioPage9!
  portfolioUpdateImagePage9(input: UpdateImage!): PortfolioPage9!
  portfolioDeletePage9(id: String!): String!
  portfolioDeletePages9(ids: [String!]!): [String!]!
  portfolioDeleteAllPages9: String!
  portfolioCreatePage10(input: CreatePage!): PortfolioPage10!
  portfolioUpdatePage10(input: UpdatePage!): PortfolioPage10!
  portfolioUpdateImagePage10(input: UpdateImage!): PortfolioPage10!
  portfolioDeletePage10(id: String!): String!
  portfolioDeletePages10(ids: [String!]!): [String!]!
  portfolioDeleteAllPages10: String!
  portfolioCreatePage11(input: CreatePage!): PortfolioPage11!
  portfolioUpdatePage11(input: UpdatePage!): PortfolioPage11!
  portfolioUpdateImagePage11(input: UpdateImage!): PortfolioPage11!
  portfolioDeletePage11(id: String!): String!
  portfolioDeletePages11(ids: [String!]!): [String!]!
  portfolioDeleteAllPages11: String!
  portfolioCreatePage12(input: CreatePage!): PortfolioPage12!
  portfolioUpdatePage12(input: UpdatePage!): PortfolioPage12!
  portfolioUpdateImagePage12(input: UpdateImage!): PortfolioPage12!
  portfolioDeletePage12(id: String!): String!
  portfolioDeletePages12(ids: [String!]!): [String!]!
  portfolioDeleteAllPages12: String!
  portfolioCreateProduct(input: CreateProduct!): PortfolioProduct!
  portfolioUpdateProduct(input: UpdateProduct!): PortfolioProduct!
  portfolioUpdateDetailProduct(input: UpdateDetailProduct!): PortfolioProduct!
  portfolioUpdatePriceProduct(input: UpdatePriceProduct!): PortfolioProduct!
  portfolioUpdateSpecsProduct(input: UpdateSpecsProduct!): PortfolioProduct!
  portfolioUpdateTagsProduct(input: UpdateTagsProduct!): PortfolioProduct!
  portfolioUpdateLikesProduct(input: UpdateLikesProduct!): PortfolioProduct!
  portfolioUpdateDisLikesProduct(input: UpdateLikesProduct!): PortfolioProduct!
  portfolioUpdateImageProduct(input: UpdateImageProduct!): PortfolioProduct!
  portfolioDeleteProduct(id: String!): String!
  portfolioDeleteProducts(ids: [String!]!): [String!]!
  portfolioDeleteAllProducts: String!
  portfolioCreateComment(input: CreateComment!): PortfolioComment!
  portfolioUpdateComment(input: UpdateComment!): PortfolioComment!
  portfolioUpdateLikesComment(input: UpdateLikesComment!): PortfolioComment!
  portfolioUpdateDisLikesComment(input: UpdateLikesComment!): PortfolioComment!
  portfolioDeleteComment(id: String!): String!
  portfolioDeleteComments(ids: [String!]!): [String!]!
  portfolioDeleteAllComments: String!
  portfolioCreateArticle(input: CreateArticle!): PortfolioArticle!
  portfolioUpdateArticle(input: UpdateArticle!): PortfolioArticle!
  portfolioUpdateContentArticle(input: UpdateContentArticle!): PortfolioArticle!
  portfolioUpdateTagsArticle(input: UpdateTagsArticle!): PortfolioArticle!
  portfolioUpdateLikesArticle(input: UpdateLikesArticle!): PortfolioArticle!
  portfolioUpdateDisLikesArticle(input: UpdateLikesArticle!): PortfolioArticle!
  portfolioUpdateImageArticle(input: UpdateImage!): PortfolioArticle!
  portfolioDeleteArticle(id: String!): String!
  portfolioDeleteArticles(ids: [String!]!): [String!]!
  portfolioDeleteAllArticles: String!
  portfolioCreateUser(input: CreateUser!): PortfolioUser!
  portfolioCreateTeam(input: CreateTeam!): PortfolioTeam!
  portfolioUpdateTeam(input: UpdateTeam!): PortfolioTeam!
  portfolioUpdateDetailTeam(input: UpdateDetailTeam!): PortfolioTeam!
  portfolioUpdateSpecsTeam(input: UpdateSpecsTeam!): PortfolioTeam!
  portfolioUpdateTagsTeam(input: UpdateTagsTeam!): PortfolioTeam!
  portfolioUpdateLikesTeam(input: UpdateLikesTeam!): PortfolioTeam!
  portfolioUpdateDisLikesTeam(input: UpdateLikesTeam!): PortfolioTeam!
  portfolioUpdateImageSeoTeam(input: UpdateImageSeo!): PortfolioTeam!
  portfolioDeleteTeam(id: String!): String!
  portfolioDeleteTeams(ids: [String!]!): [String!]!
  portfolioDeleteAllTeams: String!
  petCreateService(input: CreateService!): PetService!
  petUpdateService(input: UpdateService!): PetService!
  petUpdateDetailService(input: UpdateDetailService!): PetService!
  petUpdatePriceService(input: UpdatePriceService!): PetService!
  petUpdateSpecsService(input: UpdateSpecsService!): PetService!
  petUpdateTagsService(input: UpdateTagsService!): PetService!
  petUpdateLikesService(input: UpdateLikesService!): PetService!
  petUpdateDisLikesService(input: UpdateLikesService!): PetService!
  petDeleteService(id: String!): String!
  petDeleteServices(ids: [String!]!): [String!]!
  petDeleteAllServices: String!
  portfolioCreateService(input: CreateService!): PortfolioService!
  portfolioUpdateService(input: UpdateService!): PortfolioService!
  portfolioUpdateDetailService(input: UpdateDetailService!): PortfolioService!
  portfolioUpdatePriceService(input: UpdatePriceService!): PortfolioService!
  portfolioUpdateSpecsService(input: UpdateSpecsService!): PortfolioService!
  portfolioUpdateTagsService(input: UpdateTagsService!): PortfolioService!
  portfolioUpdateLikesService(input: UpdateLikesService!): PortfolioService!
  portfolioUpdateDisLikesService(input: UpdateLikesService!): PortfolioService!
  portfolioDeleteService(id: String!): String!
  portfolioDeleteServices(ids: [String!]!): [String!]!
  portfolioDeleteAllServices: String!
}

input CreateSite {
  name: String!
  type: String!
  uid: String!
}

input UpdateSite {
  name: String!
  uid: String!
  id: String!
}

input UpdateDB {
  id: String!
  type: [String!]!
}

input UpdateAdminSite {
  id: String!
  admin: [InputAdmin!]!
}

input InputAdmin {
  privilege: String!
  sid: String!
}

input UpdateImage {
  id: String!
  type: String
  uid: String!
  images: InputImage!
}

input InputImage {
  uid: String
  src: String!
  alt: String!
}

input CreatePage {
  name: String!
  description: String!
  type: String!
  parentId: String!
  siteId: String!
  uid: String!
}

input UpdatePage {
  name: String!
  description: String!
  type: String!
  parentId: String!
  siteId: String!
  uid: String!
  id: String!
}

input CreateProduct {
  name: String!
  description: String!
  siteId: String!
  parentId: String!
  uid: String!
  type: String!
}

input UpdateProduct {
  name: String
  description: String
  siteId: String
  parentId: String
  uid: String
  type: String
  id: String!
}

input UpdateDetailProduct {
  id: String!
  text: String!
  uid: String!
}

input UpdatePriceProduct {
  id: String!
  price: String!
  discountPrice: String!
  inStock: String!
  uid: String!
}

input UpdateSpecsProduct {
  id: String!
  text: String!
  uid: String!
}

input UpdateTagsProduct {
  id: String!
  tags: [String!]!
  uid: String!
}

input UpdateLikesProduct {
  id: String!
  uid: String!
}

input UpdateImageProduct {
  id: String!
  type: String
  uid: String!
  images: [InputImage!]!
}

input CreateComment {
  author: String!
  content: String!
  siteId: String!
  parentId: String!
  uid: String!
}

input UpdateComment {
  author: String
  content: String
  siteId: String
  parentId: String
  uid: String
  id: String!
}

input UpdateLikesComment {
  id: String!
  uid: String!
}

input CreateAdoption {
  name: String!
  description: String!
  siteId: String!
  parentId: String!
  uid: String!
  type: String!
}

input UpdateAdoption {
  name: String
  description: String
  siteId: String
  parentId: String
  uid: String
  type: String
  id: String!
}

input UpdateDetailAdoption {
  id: String!
  text: String!
  uid: String!
}

input UpdateSpecsAdoption {
  id: String!
  text: String!
  uid: String!
}

input UpdateTagsAdoption {
  id: String!
  tags: [String!]!
  uid: String!
}

input UpdateLikesAdoption {
  id: String!
  uid: String!
}

input UpdateImageAdoption {
  id: String!
  type: String
  uid: String!
  images: [InputImage!]!
}

input UpdateImageSeo {
  id: String
  src: String!
  uid: String!
}

input CreateArticle {
  name: String!
  description: String!
  siteId: String!
  parentId: String!
  uid: String!
}

input UpdateArticle {
  name: String
  description: String
  siteId: String
  parentId: String
  uid: String
  id: String!
}

input UpdateContentArticle {
  id: String!
  content: String!
  uid: String!
}

input UpdateTagsArticle {
  id: String!
  tags: [String!]!
  uid: String!
}

input UpdateLikesArticle {
  id: String!
  uid: String!
}

input CreateUser {
  username: String!
  siteId: String!
  image: String!
  email: String!
  password: String!
  role: String!
  oAuth: String
}

input CreateTeam {
  name: String!
  siteId: String!
  parentId: String!
  uid: String!
}

input UpdateTeam {
  name: String
  siteId: String
  parentId: String
  uid: String
  id: String!
}

input UpdateDetailTeam {
  id: String!
  text: String!
  uid: String!
}

input UpdateSpecsTeam {
  id: String!
  text: String!
  uid: String!
}

input UpdateTagsTeam {
  id: String!
  tags: [String!]!
  uid: String!
}

input UpdateLikesTeam {
  id: String!
  uid: String!
}

input CreateService {
  name: String!
  description: String!
  siteId: String!
  parentId: String!
  uid: String!
  type: String!
}

input UpdateService {
  name: String
  description: String
  siteId: String
  parentId: String
  uid: String
  type: String
  id: String!
}

input UpdateDetailService {
  id: String!
  text: String!
  uid: String!
}

input UpdatePriceService {
  id: String!
  price: String!
  discountPrice: String!
  inStock: String!
  uid: String!
}

input UpdateSpecsService {
  id: String!
  text: String!
  uid: String!
}

input UpdateTagsService {
  id: String!
  tags: [String!]!
  uid: String!
}

input UpdateLikesService {
  id: String!
  uid: String!
}